fun assert(name, f) {
  if (f(0) != 0) return;
  if (f(1) != 1) return;
  if (f(2) != 3) return;
  if (f(10) != 55) return;
  print "passed: " + name;
}

/*
(define Y
  (lambda (le)
    ((lambda (f) (f f))
     (lambda (f)
       (le (lambda (x) ((f f) x)))))))
*/

var Y = fun (le) {
    return
      ((fun (f) { return f(f); })
       (fun (f) { return le(fun (x) { return f(f)(x); });}));
    };

var s =
 fun (sum) {
   return fun (n) {
     if (n < 1) return 0;
     return n + sum(n - 1);
   };
 };

var sum = Y(s);

assert("sum", sum);

